apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
metadata:
  annotations:
    description: CoolStore demo microservices application buildconfigs template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: coolstore-builds
objects:
# UI
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web-ui
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: web-ui
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: web-ui:latest
    source:
      contextDir: coolstore-ui
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: NPM_MIRROR
          value: ${NPM_MIRROR}
        - name: BOWER_MIRROR
          value: ${BOWER_MIRROR}
        forcePull: false
        from:
          kind: ImageStreamTag
          name: nodejs:4
          namespace: openshift
      type: Source
    resources:
      limits:
        cpu: 500m
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
# Coolstore Gateway
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: fis-java-openshift
  spec:
    dockerImageRepository: registry.access.redhat.com/jboss-fuse-6/fis-java-openshift
    tags:
    - name: "2.0"
      annotations:
        description: JBoss Fuse Integration Services 2.0 Java S2I images.
        iconClass: icon-jboss
        supports: jboss-fuse:6.3.0,java:8,xpaas:1.2
        tags: builder,jboss-fuse,java,xpaas
        version: "2.0"
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: coolstore-gw
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: coolstore-gw
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: coolstore-gw:latest
    source:
      contextDir: coolstore-gw
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_ARGS
          value: package -DskipTests -Dfabric8.skip -e -B -Pearly-access-repo
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        forcePull: false
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:2.0
      type: Source
    resources:
      limits:
        cpu: 500m
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
# Inventory Service
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: inventory
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: inventory
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: inventory:latest
    source:
      contextDir: inventory-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        forcePull: false
        from:
          kind: ImageStreamTag
          name: jboss-eap70-openshift:1.4
          namespace: openshift
      type: Source
    resources:
      limits:
        cpu: 1
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
# Catalog Service
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: catalog
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: catalog
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: catalog:latest
    source:
      contextDir: catalog-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        forcePull: false
        from:
          kind: ImageStreamTag
          name: jboss-webserver30-tomcat8-openshift:1.2
          namespace: openshift
      type: Source
    resources:
      limits:
        cpu: 500m
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
# Cart Service
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: redhat-openjdk18-openshift
  spec:
    dockerImageRepository: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
    tags:
    - annotations:
        description: Build and run Java applications using Maven and OpenJDK 8.
        iconClass: icon-jboss
        openshift.io/display-name: Red Hat OpenJDK 8
        sampleContextDir: undertow-servlet
        sampleRepo: https://github.com/jboss-openshift/openshift-quickstarts
        supports: java:8,xpaas:1.0
        tags: builder,java,xpaas,openjdk
        version: "1.0"
      name: "1.0"
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: cart
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: cart
    labels:
      application: cart
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: cart:latest
    source:
      contextDir: cart-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.0
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
    resources:
      limits:
        cpu: 500m
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
# Pricing Rules Service
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: pricing
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: pricing
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: pricing:latest
    source:
      contextDir: pricing-service
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: KIE_CONTAINER_DEPLOYMENT
          value: ${KIE_CONTAINER_DEPLOYMENT}
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: jboss-decisionserver63-openshift:1.3
          namespace: openshift
      type: Source
    resources:
      limits:
        cpu: 500m
        memory: "2Gi"
      requests:
        cpu: "200m"
        memory: "1Gi"
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
parameters:
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
  value: https://github.com/jbossdemocentral/coolstore-microservice
- description: Git branch/tag reference
  displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/content/groups/public/)
  displayName: Maven mirror url
  name: MAVEN_MIRROR_URL
- description: NPM mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/npm/)
  displayName: NPM mirror url
  name: NPM_MIRROR
- description: Bower mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/repository/bower-mirror/)
  displayName: Bower mirror url
  name: BOWER_MIRROR
- description: Decision Server Coolstore Rules Container Spec
  name: KIE_CONTAINER_DEPLOYMENT
  required: true
  value: CoolStoreRulesContainer=com.redhat:coolstore:2.0.0
